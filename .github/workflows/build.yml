name: Build and Publish MASL Artifacts
on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  masl-dev:
    runs-on: ubuntu-latest
    outputs:
      image-version: ${{ steps.extract-version.outputs.version }}
    steps:
      - name: Install jq
        uses: dcarbone/install-jq-action@v2.1.0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Generate docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: levistarrett/masl-dev
      - name: Extract image version
        id: extract-version
        run: |
          (VERSION=$(echo '${{ steps.meta.outputs.json }}' | jq -r '.labels."org.opencontainers.image.version"') && \
            echo "VERSION=${VERSION}" && \
            echo "version=${VERSION}" >> "${GITHUB_OUTPUT}") || exit 1
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: "{{defaultContext}}:docker/masl-dev"
          platforms: linux/arm64,linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  build-and-publish:
    needs:
      - masl-dev
    strategy:
      fail-fast: false
      matrix:
        os:
          - buildjet-4vcpu-ubuntu-2204
          - buildjet-4vcpu-ubuntu-2204-arm
    runs-on: ${{ matrix.os }}
    env:
      ARTIFACTORY_USERNAME: build_server
      ARTIFACTORY_TOKEN: ${{ secrets.ARTIFACTORY_TOKEN }}
      MASL_VERSION: ${{ needs.masl-dev.outputs.image-version }}
    steps:
      - run: echo ${{ needs.masl-dev.outputs.image-version }}
      - uses: actions/checkout@v4
      - name: Build and Publish
        run: ./buildall.sh production
