// 
// Filename : DomainImport.java
//
// UK Crown Copyright (c) 2005. All Rights Reserved
//
package org.xtuml.masl.inspector;

import java.io.File;

import javax.xml.XMLConstants;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.validation.Schema;
import javax.xml.validation.SchemaFactory;

import org.w3c.dom.Document;
import org.xml.sax.SAXParseException;
import org.xtuml.masl.inspector.processInterface.DomainData;
import org.xtuml.masl.inspector.processInterface.DomainMetaData;
import org.xtuml.masl.inspector.processInterface.ProcessConnection;

public class DomainImport {

    public DomainImport(final File file, final DomainMetaData domainMeta) throws SAXParseException {
        try {
            System.out.println("Importing domain " + domainMeta.getName() + " from file " + file.getPath());

            // Validate against the quick schema to check basic syntax is correct.
            final SchemaFactory schemaFactory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);
            final Schema schema = schemaFactory
                    .newSchema(new DOMSource(new DomainSchema(domainMeta, false, false).getDocument()));

            final DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            factory.setIgnoringElementContentWhitespace(true);
            factory.setIgnoringComments(true);
            factory.setSchema(schema);

            final Document document = factory.newDocumentBuilder().parse(file);

            final DomainData data = domainMeta.getDomainData();
            data.fromXML(document.getChildNodes().item(0));
            data.writeToProcess();
            System.out.println("Domain " + domainMeta.getName() + " imported from file " + file.getPath());
        } catch (final SAXParseException spe) {
            throw spe;
        } catch (final Exception e) {
            e.printStackTrace();
        }

    }

    public static void main(final String[] args) throws Exception {
        System.setProperty("java.awt.headless", "true");
        ProcessConnection.getConnection().setCatchConsole(false);

        if (args.length != 2) {
            System.err.println("Usage: domain_import <DomainKeyLetter> <XmlFile>");
        }

        final DomainMetaData domain = ProcessConnection.getConnection().getMetaData().getDomain(args[0]);
        if (domain == null) {
            System.err.println("Error: Domain " + args[0] + " not found.");
        }
        try {
            new DomainImport(new File(args[1]), domain);
        } catch (final SAXParseException spe) {
            // Error generated by the parser
            System.out.println("\n** Parsing error in " + args[1] + ", line " + spe.getLineNumber() + ", uri "
                    + spe.getSystemId());
            System.out.println("   " + spe.getMessage());
        }
    }
}
