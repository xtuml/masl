public service JSON::to_string2(str: in string) return string is
begin

  // check if a null literal
  if str = "null" then
    return str;
  end if;

  // try to parse as an integer
  declare
    i: integer;
  begin
    i := integer'parse(str);
    return str;
  exception
    when program_error with message =>
      if Strings::contains(message, "Format not recognised") then
        // do nothing and move on
        null;
      else
        raise program_error;
      end if;
  end;

  // try to parse as an real
  declare
    r: real;
  begin
    r := real'parse(str);
    return str;
  exception
    when program_error with message =>
      if Strings::contains(message, "Format not recognised") then
        // do nothing and move on
        null;
      else
        raise program_error;
      end if;
  end;

  // try to parse as an boolean
  declare
    b: boolean;
  begin
    b := boolean'parse(str);
    return str;
  exception
    when program_error with message =>
      if Strings::contains(message, "Format not recognised") then
        // do nothing and move on
        null;
      else
        raise program_error;
      end if;
  end;

  // output as an escaped string with enclosing quotes
  declare
    output_string: string := str;
  begin
    output_string := Strings::replace_all(output_string, "\"", "\\\"");
    output_string := Strings::replace_all(output_string, "\\", "\\\\");
    output_string := Strings::replace_all(output_string, "\b", "\\b");
    output_string := Strings::replace_all(output_string, "\f", "\\f");
    output_string := Strings::replace_all(output_string, "\n", "\\n");
    output_string := Strings::replace_all(output_string, "\r", "\\r");
    output_string := Strings::replace_all(output_string, "\t", "\\t");
    return "\"" & output_string & "\"";
  end;

end service;
